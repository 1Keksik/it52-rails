openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: IT52 API
    url: https://www.it52.info/api/v2
info:
  description: IT52 API
  version: "2"
  title: IT52 API
  contact:
    email: events@www.it52.info
  license:
    name: MIT
    url: 'https://github.com/NNRUG/it52-rails/blob/it52/LICENSE.md'
paths:
  /events/{eventId}:
    get:
      summary: Event detail
      operationId: eventDetail
      parameters:
        - in: path
          required: true
          name: eventId
          description: event id
          schema:
            type: string
      responses:
        '200':
          description: event detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      attributes:
                        '$ref': '#/components/schemas/Event'
                      id:
                        type: string
                      links:
                        type: object
                        properties:
                          url:
                            type: string
                      relationships:
                        type: object
                        properties:
                          organizer:
                            '$ref': '#/components/schemas/OneRelationship'
                          participants:
                            '$ref': '#/components/schemas/ManyRelationship'
                      type:
                        type: string
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        links:
                          type: object
                          properties:
                            url:
                              type: string
                        attributes:
                          '$ref': '#/components/schemas/User'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: "https://www.it52.info/events/2019-06-29"

        '404':
          description: event not found
  /events:
    get:
      summary: Events index
      operationId: eventsIndex
      parameters:
        - in: query
          name: page
          description: page number
          schema:
            type: integer
        - in: query
          name: tag
          description: filter events by string
          schema:
            type: string
      responses:
        '200':
          description: events index
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          $ref: '#/components/schemas/Event'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                      next:
                        type: string
                      prev:
                        type: string
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        links:
                          type: object
                          properties:
                            url:
                              type: string
                        id:
                          type: string
                        attributes:
                          $ref: '#/components/schemas/User'
                  meta:
                    type: object
                    properties:
                      total_count:
                        type: integer
                      total_pages:
                        type: integer
  /tags:
    get:
      summary: tags index
      operationId: tagsIndex
      parameters:
        - in: query
          name: q
          description: search query
          schema:
            type: string
      responses:
        '200':
          description: tags index
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          $ref: '#/components/schemas/Tag'
                  meta:
                    type: object
                    properties:
                      total_count:
                        type: integer

components:
  schemas:
    Event:
      type: object
      properties:
        title:
          type: string
          example: 'My Event'
        createdAt:
          type: string
          example: "2019-06-13T19:00:00.000+03:00"
        updatedAt:
          type: string
          example: "2019-06-13T19:00:00.000+03:00"
        startedAt:
          type: string
          example: "2019-06-13T19:00:00.000+03:00"
        published:
          type: boolean
        description:
          type: string
        titleImage:
          type: object
          properties:
            url:
              type: string
            square_500:
              type: object
              properties:
                url:
                  type: string
            fb_1200:
              type: object
              properties:
                url:
                  type: string
        place:
          type: string
        slug:
          type: string
        foreignLink:
          type: string
        pageviews:
          type: integer
        kind:
          type: string
          enum:
          - event
          - education
        tagList:
          type: array
          items:
            type: string

    UserAvatarImage:
      type: object
      properties:
        url:
          type: string
        square_25:
          type: object
          properties:
            url:
              type: string
        square_50:
          type: object
          properties:
            url:
              type: string
        square_150:
          type: object
          properties:
            url:
              type: string
    OneRelationship:
      required:
      - data
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
    ManyRelationship:
      required:
      - data
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
    User:
      properties:
        nickname:
          type: string
          example: 'cool_hacker'
        role:
          type: string
          enum:
          - member
          - admin
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        avatarImage:
          $ref: '#/components/schemas/UserAvatarImage'
        slug:
          type: string
        website:
          type: string
        employment:
          type: string
      type: object
    Tag:
      type: object
      properties:
        name:
          type: string
        taggingsCount:
          type: integer
